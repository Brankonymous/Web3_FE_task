{"ast":null,"code":"var reIpv4FirstPass = /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/;\nvar reSubnetString = /\\/\\d{1,3}(?=%|$)/;\nvar reForwardSlash = /\\//;\nvar reZone = /%.*$/;\nvar reBadCharacters = /([^0-9a-f:/%])/i;\nvar reBadAddress = /([0-9a-f]{5,}|:{3,}|[^:]:$|^:[^:]|\\/$)/i;\nfunction validate4(input) {\n  if (!reIpv4FirstPass.test(input)) return false;\n  var parts = input.split('.');\n  if (parts.length !== 4) return false;\n  if (parts[0][0] === '0' && parts[0].length > 1) return false;\n  if (parts[1][0] === '0' && parts[1].length > 1) return false;\n  if (parts[2][0] === '0' && parts[2].length > 1) return false;\n  if (parts[3][0] === '0' && parts[3].length > 1) return false;\n  var n0 = Number(parts[0]);\n  var n1 = Number(parts[1]);\n  var n2 = Number(parts[2]);\n  var n3 = Number(parts[3]);\n  return n0 >= 0 && n0 < 256 && n1 >= 0 && n1 < 256 && n2 >= 0 && n2 < 256 && n3 >= 0 && n3 < 256;\n}\nfunction validate6(input) {\n  var withoutSubnet = input.replace(reSubnetString, '');\n  var hasSubnet = input.length !== withoutSubnet.length;\n\n  // FIXME: this should probably be an option in the future\n  if (hasSubnet) return false;\n  if (!hasSubnet) {\n    if (reForwardSlash.test(input)) return false;\n  }\n  var withoutZone = withoutSubnet.replace(reZone, '');\n  var lastPartSeparator = withoutZone.lastIndexOf(':');\n  if (lastPartSeparator === -1) return false;\n  var lastPart = withoutZone.substring(lastPartSeparator + 1);\n  var hasV4Part = validate4(lastPart);\n  var address = hasV4Part ? withoutZone.substring(0, lastPartSeparator + 1) + '1234:5678' : withoutZone;\n  if (reBadCharacters.test(address)) return false;\n  if (reBadAddress.test(address)) return false;\n  var halves = address.split('::');\n  if (halves.length > 2) return false;\n  if (halves.length === 2) {\n    var first = halves[0] === '' ? [] : halves[0].split(':');\n    var last = halves[1] === '' ? [] : halves[1].split(':');\n    var remainingLength = 8 - (first.length + last.length);\n    if (remainingLength <= 0) return false;\n  } else {\n    if (address.split(':').length !== 8) return false;\n  }\n  return true;\n}\nfunction validate(input) {\n  return validate4(input) || validate6(input);\n}\nmodule.exports = function validator(options) {\n  if (!options) options = {};\n  if (options.version === 4) return validate4;\n  if (options.version === 6) return validate6;\n  if (options.version == null) return validate;\n  throw new Error('Unknown version: ' + options.version);\n};\nmodule.exports['__all_regexes__'] = [reIpv4FirstPass, reSubnetString, reForwardSlash, reZone, reBadCharacters, reBadAddress];","map":{"version":3,"names":["reIpv4FirstPass","reSubnetString","reForwardSlash","reZone","reBadCharacters","reBadAddress","validate4","input","test","parts","split","length","n0","Number","n1","n2","n3","validate6","withoutSubnet","replace","hasSubnet","withoutZone","lastPartSeparator","lastIndexOf","lastPart","substring","hasV4Part","address","halves","first","last","remainingLength","validate","module","exports","validator","options","version","Error"],"sources":["/Users/branko/Documents/Web3_FE_task/node_modules/is-my-ip-valid/index.js"],"sourcesContent":["var reIpv4FirstPass = /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/\n\nvar reSubnetString = /\\/\\d{1,3}(?=%|$)/\nvar reForwardSlash = /\\//\nvar reZone = /%.*$/\nvar reBadCharacters = /([^0-9a-f:/%])/i\nvar reBadAddress = /([0-9a-f]{5,}|:{3,}|[^:]:$|^:[^:]|\\/$)/i\n\nfunction validate4 (input) {\n  if (!(reIpv4FirstPass.test(input))) return false\n\n  var parts = input.split('.')\n\n  if (parts.length !== 4) return false\n\n  if (parts[0][0] === '0' && parts[0].length > 1) return false\n  if (parts[1][0] === '0' && parts[1].length > 1) return false\n  if (parts[2][0] === '0' && parts[2].length > 1) return false\n  if (parts[3][0] === '0' && parts[3].length > 1) return false\n\n  var n0 = Number(parts[0])\n  var n1 = Number(parts[1])\n  var n2 = Number(parts[2])\n  var n3 = Number(parts[3])\n\n  return (n0 >= 0 && n0 < 256 && n1 >= 0 && n1 < 256 && n2 >= 0 && n2 < 256 && n3 >= 0 && n3 < 256)\n}\n\nfunction validate6 (input) {\n  var withoutSubnet = input.replace(reSubnetString, '')\n  var hasSubnet = (input.length !== withoutSubnet.length)\n\n  // FIXME: this should probably be an option in the future\n  if (hasSubnet) return false\n\n  if (!hasSubnet) {\n    if (reForwardSlash.test(input)) return false\n  }\n\n  var withoutZone = withoutSubnet.replace(reZone, '')\n  var lastPartSeparator = withoutZone.lastIndexOf(':')\n\n  if (lastPartSeparator === -1) return false\n\n  var lastPart = withoutZone.substring(lastPartSeparator + 1)\n  var hasV4Part = validate4(lastPart)\n  var address = (hasV4Part ? withoutZone.substring(0, lastPartSeparator + 1) + '1234:5678' : withoutZone)\n\n  if (reBadCharacters.test(address)) return false\n  if (reBadAddress.test(address)) return false\n\n  var halves = address.split('::')\n\n  if (halves.length > 2) return false\n\n  if (halves.length === 2) {\n    var first = (halves[0] === '' ? [] : halves[0].split(':'))\n    var last = (halves[1] === '' ? [] : halves[1].split(':'))\n    var remainingLength = 8 - (first.length + last.length)\n\n    if (remainingLength <= 0) return false\n  } else {\n    if (address.split(':').length !== 8) return false\n  }\n\n  return true\n}\n\nfunction validate (input) {\n  return validate4(input) || validate6(input)\n}\n\nmodule.exports = function validator (options) {\n  if (!options) options = {}\n\n  if (options.version === 4) return validate4\n  if (options.version === 6) return validate6\n  if (options.version == null) return validate\n\n  throw new Error('Unknown version: ' + options.version)\n}\n\nmodule.exports['__all_regexes__'] = [\n  reIpv4FirstPass,\n  reSubnetString,\n  reForwardSlash,\n  reZone,\n  reBadCharacters,\n  reBadAddress\n]\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}