{"ast":null,"code":"var _jsxFileName = \"/Users/branko/Documents/Web3_FE_task/src/WalletPage.js\",\n  _s = $RefreshSig$();\nimport { useLocation } from \"react-router-dom\";\nimport React, { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DAIAddress = \"0x6B175474E89094C44Da98b954EedeAC495271d0F\";\n\n// The minimum ABI to get ERC20 Token balance\nlet minABI = [\n// balanceOf\n{\n  \"constant\": true,\n  \"inputs\": [{\n    \"name\": \"_owner\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"balanceOf\",\n  \"outputs\": [{\n    \"name\": \"balance\",\n    \"type\": \"uint256\"\n  }],\n  \"type\": \"function\"\n},\n// decimals\n{\n  \"constant\": true,\n  \"inputs\": [],\n  \"name\": \"decimals\",\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"uint8\"\n  }],\n  \"type\": \"function\"\n}];\nfunction WalletPage() {\n  _s();\n  const [balanceInETH, setBalanceInETH] = useState(0);\n  const [balanceInDAI, setBalanceInDAI] = useState(0);\n  const [balanceInUSDC, setBalanceInUSDC] = useState(0);\n  const [balanceInWBTC, setBalanceInWBTC] = useState(0);\n  const data = useLocation().state;\n  const accountAddress = data.account;\n  const web3 = new Web3(window.ethereum);\n  useEffect(() => {\n    (async () => {\n      const ETHBalance = await web3.eth.getBalance(accountAddress);\n      setBalanceInETH(web3.utils.fromWei(ETHBalance, 'ether'));\n      const DAIContract = new web3.eth.Contract(minABI, DAIAddress);\n      setBalanceInDAI(DAIContract.balanceOf(accountAddress, (error, balance) => {\n        // Get decimals\n        DAIContract.decimals((error, decimals) => {\n          // calculate a balance\n          balance = balance.div(10 ** decimals);\n          console.log(balance.toString());\n        });\n      }));\n      console.log(balanceInETH);\n    })();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Address: \", accountAddress]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"ETH: \", balanceInETH]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"DAI: \", balanceInDAI]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(WalletPage, \"B2rv2+6msu+8VpLWwiVNOXslSQc=\", false, function () {\n  return [useLocation];\n});\n_c = WalletPage;\nexport default WalletPage;\nvar _c;\n$RefreshReg$(_c, \"WalletPage\");","map":{"version":3,"names":["useLocation","React","useState","useEffect","Web3","jsxDEV","_jsxDEV","DAIAddress","minABI","WalletPage","_s","balanceInETH","setBalanceInETH","balanceInDAI","setBalanceInDAI","balanceInUSDC","setBalanceInUSDC","balanceInWBTC","setBalanceInWBTC","data","state","accountAddress","account","web3","window","ethereum","ETHBalance","eth","getBalance","utils","fromWei","DAIContract","Contract","balanceOf","error","balance","decimals","div","console","log","toString","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/branko/Documents/Web3_FE_task/src/WalletPage.js"],"sourcesContent":["import { useLocation } from \"react-router-dom\";\nimport React, { useState, useEffect } from 'react';\n\nimport Web3 from 'web3';\n\nconst DAIAddress = \"0x6B175474E89094C44Da98b954EedeAC495271d0F\";\n\n// The minimum ABI to get ERC20 Token balance\nlet minABI = [\n    // balanceOf\n    {\n      \"constant\":true,\n      \"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\n      \"name\":\"balanceOf\",\n      \"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\n      \"type\":\"function\"\n    },\n    // decimals\n    {\n      \"constant\":true,\n      \"inputs\":[],\n      \"name\":\"decimals\",\n      \"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\n      \"type\":\"function\"\n    }\n  ];\n\nfunction WalletPage() {\n    const [balanceInETH, setBalanceInETH] = useState(0);\n    const [balanceInDAI, setBalanceInDAI] = useState(0);\n    const [balanceInUSDC, setBalanceInUSDC] = useState(0);\n    const [balanceInWBTC, setBalanceInWBTC] = useState(0);\n\n    const data = useLocation().state;\n    const accountAddress = data.account;\n    const web3 = new Web3(window.ethereum);\n\n    useEffect(() => {\n        (async () => {\n            const ETHBalance = await web3.eth.getBalance(accountAddress);\n            setBalanceInETH(web3.utils.fromWei(ETHBalance, 'ether'));\n            \n            const DAIContract = new web3.eth.Contract(minABI, DAIAddress);\n            setBalanceInDAI(\n                    DAIContract.balanceOf(accountAddress, (error, balance) => {\n                    // Get decimals\n                    DAIContract.decimals((error, decimals) => {\n                    // calculate a balance\n                    balance = balance.div(10**decimals);\n                    console.log(balance.toString());\n                    });\n                })\n            );\n\n            console.log(balanceInETH);\n        })()\n      });\n\n    return (\n        <div>\n            <h1>Address: {accountAddress}</h1>\n            <h3>ETH: {balanceInETH}</h3>\n            <h3>DAI: {balanceInDAI}</h3>\n        </div>\n    );\n}\n\nexport default WalletPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}