{"ast":null,"code":"\"use strict\";\n\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatTransaction = void 0;\nconst web3_types_1 = require(\"web3-types\");\nconst web3_validator_1 = require(\"web3-validator\");\nconst web3_errors_1 = require(\"web3-errors\");\nconst web3_utils_1 = require(\"web3-utils\");\nconst schemas_js_1 = require(\"../schemas.js\");\nfunction formatTransaction(transaction, returnFormat = web3_types_1.DEFAULT_RETURN_FORMAT, options = {\n  transactionSchema: schemas_js_1.transactionSchema\n}) {\n  var _a;\n  let formattedTransaction = (0, web3_utils_1.mergeDeep)({}, transaction);\n  if (!(0, web3_validator_1.isNullish)(transaction === null || transaction === void 0 ? void 0 : transaction.common)) {\n    formattedTransaction.common = Object.assign({}, transaction.common);\n    if (!(0, web3_validator_1.isNullish)((_a = transaction.common) === null || _a === void 0 ? void 0 : _a.customChain)) formattedTransaction.common.customChain = Object.assign({}, transaction.common.customChain);\n  }\n  formattedTransaction = (0, web3_utils_1.format)(options.transactionSchema, formattedTransaction, returnFormat);\n  if (!(0, web3_validator_1.isNullish)(formattedTransaction.data)) {\n    if (!(0, web3_validator_1.isNullish)(formattedTransaction.input) && formattedTransaction.data !== formattedTransaction.input) throw new web3_errors_1.TransactionDataAndInputError({\n      data: (0, web3_utils_1.bytesToHex)(formattedTransaction.data),\n      input: (0, web3_utils_1.bytesToHex)(formattedTransaction.input)\n    });\n    formattedTransaction.input = formattedTransaction.data;\n  } else if (!(0, web3_validator_1.isNullish)(formattedTransaction.input)) {\n    formattedTransaction.data = formattedTransaction.input;\n  }\n  if (!(0, web3_validator_1.isNullish)(formattedTransaction.gasLimit)) {\n    formattedTransaction.gas = formattedTransaction.gasLimit;\n    delete formattedTransaction.gasLimit;\n  }\n  return formattedTransaction;\n}\nexports.formatTransaction = formatTransaction;","map":{"version":3,"names":["web3_types_1","require","web3_validator_1","web3_errors_1","web3_utils_1","schemas_js_1","formatTransaction","transaction","returnFormat","DEFAULT_RETURN_FORMAT","options","transactionSchema","formattedTransaction","mergeDeep","isNullish","common","Object","assign","_a","customChain","format","data","input","TransactionDataAndInputError","bytesToHex","gasLimit","gas","exports"],"sources":["/Users/branko/Documents/Web3_FE_task/node_modules/web3-eth/src/utils/format_transaction.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { Transaction, DataFormat, DEFAULT_RETURN_FORMAT, FormatType } from 'web3-types';\nimport { isNullish, ValidationSchemaInput } from 'web3-validator';\nimport { TransactionDataAndInputError } from 'web3-errors';\nimport { mergeDeep, bytesToHex, format } from 'web3-utils';\nimport { transactionSchema } from '../schemas.js';\n\nexport function formatTransaction<\n\tReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT,\n\tTransactionType extends Transaction = Transaction,\n>(\n\ttransaction: TransactionType,\n\treturnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\n\toptions: { transactionSchema: ValidationSchemaInput | typeof transactionSchema } = {\n\t\ttransactionSchema,\n\t},\n): FormatType<TransactionType, ReturnFormat> {\n\tlet formattedTransaction = mergeDeep({}, transaction as Record<string, unknown>) as Transaction;\n\tif (!isNullish(transaction?.common)) {\n\t\tformattedTransaction.common = { ...transaction.common };\n\t\tif (!isNullish(transaction.common?.customChain))\n\t\t\tformattedTransaction.common.customChain = { ...transaction.common.customChain };\n\t}\n\n\tformattedTransaction = format(options.transactionSchema, formattedTransaction, returnFormat);\n\n\tif (!isNullish(formattedTransaction.data)) {\n\t\tif (\n\t\t\t!isNullish(formattedTransaction.input) &&\n\t\t\tformattedTransaction.data !== formattedTransaction.input\n\t\t)\n\t\t\tthrow new TransactionDataAndInputError({\n\t\t\t\tdata: bytesToHex(formattedTransaction.data),\n\t\t\t\tinput: bytesToHex(formattedTransaction.input),\n\t\t\t});\n\n\t\tformattedTransaction.input = formattedTransaction.data;\n\t} else if (!isNullish(formattedTransaction.input)) {\n\t\tformattedTransaction.data = formattedTransaction.input;\n\t}\n\n\tif (!isNullish(formattedTransaction.gasLimit)) {\n\t\tformattedTransaction.gas = formattedTransaction.gasLimit;\n\t\tdelete formattedTransaction.gasLimit;\n\t}\n\n\treturn formattedTransaction as FormatType<TransactionType, ReturnFormat>;\n}\n"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;AAiBA,MAAAA,YAAA,GAAAC,OAAA;AACA,MAAAC,gBAAA,GAAAD,OAAA;AACA,MAAAE,aAAA,GAAAF,OAAA;AACA,MAAAG,YAAA,GAAAH,OAAA;AACA,MAAAI,YAAA,GAAAJ,OAAA;AAEA,SAAgBK,iBAAiBA,CAIhCC,WAA4B,EAC5BC,YAAA,GAA6BR,YAAA,CAAAS,qBAAqC,EAClEC,OAAA,GAAmF;EAClFC,iBAAiB,EAAjBN,YAAA,CAAAM;CACA;;EAED,IAAIC,oBAAoB,GAAG,IAAAR,YAAA,CAAAS,SAAS,EAAC,EAAE,EAAEN,WAAsC,CAAgB;EAC/F,IAAI,CAAC,IAAAL,gBAAA,CAAAY,SAAS,EAACP,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEQ,MAAM,CAAC,EAAE;IACpCH,oBAAoB,CAACG,MAAM,GAAAC,MAAA,CAAAC,MAAA,KAAQV,WAAW,CAACQ,MAAM,CAAE;IACvD,IAAI,CAAC,IAAAb,gBAAA,CAAAY,SAAS,EAAC,CAAAI,EAAA,GAAAX,WAAW,CAACQ,MAAM,cAAAG,EAAA,uBAAAA,EAAA,CAAEC,WAAW,CAAC,EAC9CP,oBAAoB,CAACG,MAAM,CAACI,WAAW,GAAAH,MAAA,CAAAC,MAAA,KAAQV,WAAW,CAACQ,MAAM,CAACI,WAAW,CAAE;;EAGjFP,oBAAoB,GAAG,IAAAR,YAAA,CAAAgB,MAAM,EAACV,OAAO,CAACC,iBAAiB,EAAEC,oBAAoB,EAAEJ,YAAY,CAAC;EAE5F,IAAI,CAAC,IAAAN,gBAAA,CAAAY,SAAS,EAACF,oBAAoB,CAACS,IAAI,CAAC,EAAE;IAC1C,IACC,CAAC,IAAAnB,gBAAA,CAAAY,SAAS,EAACF,oBAAoB,CAACU,KAAK,CAAC,IACtCV,oBAAoB,CAACS,IAAI,KAAKT,oBAAoB,CAACU,KAAK,EAExD,MAAM,IAAInB,aAAA,CAAAoB,4BAA4B,CAAC;MACtCF,IAAI,EAAE,IAAAjB,YAAA,CAAAoB,UAAU,EAACZ,oBAAoB,CAACS,IAAI,CAAC;MAC3CC,KAAK,EAAE,IAAAlB,YAAA,CAAAoB,UAAU,EAACZ,oBAAoB,CAACU,KAAK;KAC5C,CAAC;IAEHV,oBAAoB,CAACU,KAAK,GAAGV,oBAAoB,CAACS,IAAI;GACtD,MAAM,IAAI,CAAC,IAAAnB,gBAAA,CAAAY,SAAS,EAACF,oBAAoB,CAACU,KAAK,CAAC,EAAE;IAClDV,oBAAoB,CAACS,IAAI,GAAGT,oBAAoB,CAACU,KAAK;;EAGvD,IAAI,CAAC,IAAApB,gBAAA,CAAAY,SAAS,EAACF,oBAAoB,CAACa,QAAQ,CAAC,EAAE;IAC9Cb,oBAAoB,CAACc,GAAG,GAAGd,oBAAoB,CAACa,QAAQ;IACxD,OAAOb,oBAAoB,CAACa,QAAQ;;EAGrC,OAAOb,oBAAiE;AACzE;AAxCAe,OAAA,CAAArB,iBAAA,GAAAA,iBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}