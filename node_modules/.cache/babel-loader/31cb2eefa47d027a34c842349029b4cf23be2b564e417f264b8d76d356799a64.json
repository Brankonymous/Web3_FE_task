{"ast":null,"code":"\"use strict\";\n\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Web3ValidatorError = void 0;\nconst web3_errors_1 = require(\"web3-errors\");\nconst object_js_1 = require(\"./validation/object.js\");\nconst errorFormatter = error => {\n  if (error.message && error.instancePath && error.params && !(0, object_js_1.isNullish)(error.params.value)) {\n    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n    return `value \"${error.params.value}\" at \"${error.instancePath}\" ${error.message}`;\n  }\n  if (error.message && error.instancePath) {\n    return `value at \"${error.instancePath}\" ${error.message}`;\n  }\n  if (error.instancePath) {\n    return `value at \"${error.instancePath}\" caused unspecified error`;\n  }\n  if (error.message) {\n    return error.message;\n  }\n  return 'unspecified error';\n};\nclass Web3ValidatorError extends web3_errors_1.BaseWeb3Error {\n  constructor(errors) {\n    super();\n    this.code = web3_errors_1.ERR_VALIDATION;\n    this.errors = errors;\n    super.message = `Web3 validator found ${errors.length} error[s]:\\n${this._compileErrors().join('\\n')}`;\n  }\n  _compileErrors() {\n    const errorMsgs = this.errors.map(errorFormatter);\n    return errorMsgs;\n  }\n}\nexports.Web3ValidatorError = Web3ValidatorError;","map":{"version":3,"names":["web3_errors_1","require","object_js_1","errorFormatter","error","message","instancePath","params","isNullish","value","Web3ValidatorError","BaseWeb3Error","constructor","errors","code","ERR_VALIDATION","length","_compileErrors","join","errorMsgs","map","exports"],"sources":["/Users/branko/Documents/Web3_FE_task/node_modules/web3-validator/src/errors.ts"],"sourcesContent":["ï»¿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { BaseWeb3Error, ERR_VALIDATION } from 'web3-errors';\nimport { Web3ValidationErrorObject } from 'web3-types';\n\nimport { isNullish } from './validation/object.js';\n\nconst errorFormatter = (error: Web3ValidationErrorObject): string => {\n\tif (error.message && error.instancePath && error.params && !isNullish(error.params.value)) {\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\treturn `value \"${(error.params as { value: unknown }).value}\" at \"${error.instancePath}\" ${\n\t\t\terror.message\n\t\t}`;\n\t}\n\n\tif (error.message && error.instancePath) {\n\t\treturn `value at \"${error.instancePath}\" ${error.message}`;\n\t}\n\n\tif (error.instancePath) {\n\t\treturn `value at \"${error.instancePath}\" caused unspecified error`;\n\t}\n\n\tif (error.message) {\n\t\treturn error.message;\n\t}\n\n\treturn 'unspecified error';\n};\n\nexport class Web3ValidatorError extends BaseWeb3Error {\n\tpublic code = ERR_VALIDATION;\n\tpublic readonly errors: Web3ValidationErrorObject[];\n\n\tpublic constructor(errors: Web3ValidationErrorObject[]) {\n\t\tsuper();\n\n\t\tthis.errors = errors;\n\n\t\tsuper.message = `Web3 validator found ${\n\t\t\terrors.length\n\t\t} error[s]:\\n${this._compileErrors().join('\\n')}`;\n\t}\n\n\tprivate _compileErrors(): string[] {\n\t\tconst errorMsgs = this.errors.map(errorFormatter);\n\t\treturn errorMsgs;\n\t}\n}\n"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;AAiBA,MAAAA,aAAA,GAAAC,OAAA;AAGA,MAAAC,WAAA,GAAAD,OAAA;AAEA,MAAME,cAAc,GAAIC,KAAgC,IAAY;EACnE,IAAIA,KAAK,CAACC,OAAO,IAAID,KAAK,CAACE,YAAY,IAAIF,KAAK,CAACG,MAAM,IAAI,CAAC,IAAAL,WAAA,CAAAM,SAAS,EAACJ,KAAK,CAACG,MAAM,CAACE,KAAK,CAAC,EAAE;IAC1F;IACA,OAAO,UAAWL,KAAK,CAACG,MAA6B,CAACE,KAAK,SAASL,KAAK,CAACE,YAAY,KACrFF,KAAK,CAACC,OACP,EAAE;;EAGH,IAAID,KAAK,CAACC,OAAO,IAAID,KAAK,CAACE,YAAY,EAAE;IACxC,OAAO,aAAaF,KAAK,CAACE,YAAY,KAAKF,KAAK,CAACC,OAAO,EAAE;;EAG3D,IAAID,KAAK,CAACE,YAAY,EAAE;IACvB,OAAO,aAAaF,KAAK,CAACE,YAAY,4BAA4B;;EAGnE,IAAIF,KAAK,CAACC,OAAO,EAAE;IAClB,OAAOD,KAAK,CAACC,OAAO;;EAGrB,OAAO,mBAAmB;AAC3B,CAAC;AAED,MAAaK,kBAAmB,SAAQV,aAAA,CAAAW,aAAa;EAIpDC,YAAmBC,MAAmC;IACrD,KAAK,EAAE;IAJD,KAAAC,IAAI,GAAGd,aAAA,CAAAe,cAAc;IAM3B,IAAI,CAACF,MAAM,GAAGA,MAAM;IAEpB,KAAK,CAACR,OAAO,GAAG,wBACfQ,MAAM,CAACG,MACR,eAAe,IAAI,CAACC,cAAc,EAAE,CAACC,IAAI,CAAC,IAAI,CAAC,EAAE;EAClD;EAEQD,cAAcA,CAAA;IACrB,MAAME,SAAS,GAAG,IAAI,CAACN,MAAM,CAACO,GAAG,CAACjB,cAAc,CAAC;IACjD,OAAOgB,SAAS;EACjB;;AAjBDE,OAAA,CAAAX,kBAAA,GAAAA,kBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}