{"ast":null,"code":"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nexport const accessListItemSchema = {\n  type: 'object',\n  properties: {\n    address: {\n      format: 'address'\n    },\n    storageKeys: {\n      type: 'array',\n      items: {\n        format: 'bytes32'\n      }\n    }\n  }\n};\nexport const accessListSchema = {\n  type: 'array',\n  items: Object.assign({}, accessListItemSchema)\n};\nexport const accessListResultSchema = {\n  type: 'object',\n  properties: {\n    accessList: Object.assign({}, accessListSchema),\n    gasUsed: {\n      type: 'string'\n    }\n  }\n};\nexport const chainSchema = {\n  type: 'string',\n  enum: ['goerli', 'kovan', 'mainnet', 'rinkeby', 'ropsten', 'sepolia']\n};\nexport const hardforkSchema = {\n  type: 'string',\n  enum: ['arrowGlacier', 'berlin', 'byzantium', 'chainstart', 'constantinople', 'dao', 'homestead', 'istanbul', 'london', 'merge', 'muirGlacier', 'petersburg', 'shanghai', 'spuriousDragon', 'tangerineWhistle']\n};\nexport const customChainSchema = {\n  type: 'object',\n  properties: {\n    name: {\n      format: 'string'\n    },\n    networkId: {\n      format: 'uint'\n    },\n    chainId: {\n      format: 'uint'\n    }\n  }\n};\nexport const transactionSchema = {\n  type: 'object',\n  properties: {\n    from: {\n      format: 'address'\n    },\n    to: {\n      oneOf: [{\n        format: 'address'\n      }, {\n        type: 'null'\n      }]\n    },\n    value: {\n      format: 'uint'\n    },\n    gas: {\n      format: 'uint'\n    },\n    gasPrice: {\n      format: 'uint'\n    },\n    effectiveGasPrice: {\n      format: 'uint'\n    },\n    type: {\n      format: 'uint'\n    },\n    maxFeePerGas: {\n      format: 'uint'\n    },\n    maxPriorityFeePerGas: {\n      format: 'uint'\n    },\n    accessList: Object.assign({}, accessListSchema),\n    data: {\n      format: 'bytes'\n    },\n    input: {\n      format: 'bytes'\n    },\n    nonce: {\n      format: 'uint'\n    },\n    chain: Object.assign({}, chainSchema),\n    hardfork: Object.assign({}, hardforkSchema),\n    chainId: {\n      format: 'uint'\n    },\n    networkId: {\n      format: 'uint'\n    },\n    common: {\n      type: 'object',\n      properties: {\n        customChain: Object.assign({}, customChainSchema),\n        baseChain: Object.assign({}, chainSchema),\n        hardfork: Object.assign({}, hardforkSchema)\n      }\n    },\n    gasLimit: {\n      format: 'uint'\n    },\n    v: {\n      format: 'uint'\n    },\n    r: {\n      format: 'bytes32'\n    },\n    s: {\n      format: 'bytes32'\n    }\n  }\n};\nexport const transactionInfoSchema = {\n  type: 'object',\n  properties: Object.assign(Object.assign({}, transactionSchema.properties), {\n    blockHash: {\n      format: 'bytes32'\n    },\n    blockNumber: {\n      format: 'uint'\n    },\n    hash: {\n      format: 'bytes32'\n    },\n    transactionIndex: {\n      format: 'uint'\n    },\n    from: {\n      format: 'address'\n    },\n    to: {\n      oneOf: [{\n        format: 'address'\n      }, {\n        type: 'null'\n      }]\n    },\n    value: {\n      format: 'uint'\n    },\n    gas: {\n      format: 'uint'\n    },\n    gasPrice: {\n      format: 'uint'\n    },\n    effectiveGasPrice: {\n      format: 'uint'\n    },\n    type: {\n      format: 'uint'\n    },\n    maxFeePerGas: {\n      format: 'uint'\n    },\n    maxPriorityFeePerGas: {\n      format: 'uint'\n    },\n    accessList: Object.assign({}, accessListSchema),\n    data: {\n      format: 'bytes'\n    },\n    input: {\n      format: 'bytes'\n    },\n    nonce: {\n      format: 'uint'\n    },\n    gasLimit: {\n      format: 'uint'\n    },\n    v: {\n      format: 'uint'\n    },\n    r: {\n      format: 'bytes32'\n    },\n    s: {\n      format: 'bytes32'\n    }\n  })\n};\nexport const blockSchema = {\n  type: 'object',\n  properties: {\n    parentHash: {\n      format: 'bytes32'\n    },\n    sha3Uncles: {\n      format: 'bytes32'\n    },\n    miner: {\n      format: 'bytes'\n    },\n    stateRoot: {\n      format: 'bytes32'\n    },\n    transactionsRoot: {\n      format: 'bytes32'\n    },\n    receiptsRoot: {\n      format: 'bytes32'\n    },\n    logsBloom: {\n      format: 'bytes256'\n    },\n    difficulty: {\n      format: 'uint'\n    },\n    number: {\n      format: 'uint'\n    },\n    gasLimit: {\n      format: 'uint'\n    },\n    gasUsed: {\n      format: 'uint'\n    },\n    timestamp: {\n      format: 'uint'\n    },\n    extraData: {\n      format: 'bytes'\n    },\n    mixHash: {\n      format: 'bytes32'\n    },\n    nonce: {\n      format: 'uint'\n    },\n    totalDifficulty: {\n      format: 'uint'\n    },\n    baseFeePerGas: {\n      format: 'uint'\n    },\n    size: {\n      format: 'uint'\n    },\n    transactions: {\n      oneOf: [{\n        type: 'array',\n        items: Object.assign({}, transactionInfoSchema)\n      }, {\n        type: 'array',\n        items: {\n          format: 'bytes32'\n        }\n      }]\n    },\n    uncles: {\n      type: 'array',\n      items: {\n        format: 'bytes32'\n      }\n    },\n    hash: {\n      format: 'bytes32'\n    }\n  }\n};\nexport const blockHeaderSchema = {\n  type: 'object',\n  properties: {\n    parentHash: {\n      format: 'bytes32'\n    },\n    receiptRoot: {\n      format: 'bytes32'\n    },\n    miner: {\n      format: 'bytes'\n    },\n    stateRoot: {\n      format: 'bytes32'\n    },\n    transactionsRoot: {\n      format: 'bytes32'\n    },\n    logsBloom: {\n      format: 'bytes256'\n    },\n    difficulty: {\n      format: 'uint'\n    },\n    number: {\n      format: 'uint'\n    },\n    gasLimit: {\n      format: 'uint'\n    },\n    gasUsed: {\n      format: 'uint'\n    },\n    timestamp: {\n      format: 'uint'\n    },\n    extraData: {\n      format: 'bytes'\n    },\n    nonce: {\n      format: 'uint'\n    },\n    sha3Uncles: {\n      format: 'bytes32'\n    }\n  }\n};\nexport const logSchema = {\n  type: 'object',\n  properties: {\n    removed: {\n      format: 'bool'\n    },\n    logIndex: {\n      format: 'uint'\n    },\n    transactionIndex: {\n      format: 'uint'\n    },\n    transactionHash: {\n      format: 'bytes32'\n    },\n    blockHash: {\n      format: 'bytes32'\n    },\n    blockNumber: {\n      format: 'uint'\n    },\n    address: {\n      format: 'address'\n    },\n    data: {\n      format: 'bytes'\n    },\n    topics: {\n      type: 'array',\n      items: {\n        format: 'bytes32'\n      }\n    }\n  }\n};\nexport const syncSchema = {\n  type: 'object',\n  properties: {\n    startingBlock: {\n      format: 'string'\n    },\n    currentBlock: {\n      format: 'string'\n    },\n    highestBlock: {\n      format: 'string'\n    },\n    knownStates: {\n      format: 'string'\n    },\n    pulledStates: {\n      format: 'string'\n    }\n  }\n};\nexport const transactionReceiptSchema = {\n  type: 'object',\n  properties: {\n    transactionHash: {\n      format: 'bytes32'\n    },\n    transactionIndex: {\n      format: 'uint'\n    },\n    blockHash: {\n      format: 'bytes32'\n    },\n    blockNumber: {\n      format: 'uint'\n    },\n    from: {\n      format: 'address'\n    },\n    to: {\n      format: 'address'\n    },\n    cumulativeGasUsed: {\n      format: 'uint'\n    },\n    gasUsed: {\n      format: 'uint'\n    },\n    effectiveGasPrice: {\n      format: 'uint'\n    },\n    contractAddress: {\n      format: 'address'\n    },\n    logs: {\n      type: 'array',\n      items: Object.assign({}, logSchema)\n    },\n    logsBloom: {\n      format: 'bytes'\n    },\n    root: {\n      format: 'bytes'\n    },\n    status: {\n      format: 'uint'\n    },\n    type: {\n      format: 'uint'\n    }\n  }\n};\nexport const SignatureObjectSchema = {\n  type: 'object',\n  properties: {\n    messageHash: {\n      format: 'bytes'\n    },\n    r: {\n      format: 'bytes32'\n    },\n    s: {\n      format: 'bytes32'\n    },\n    v: {\n      format: 'bytes'\n    },\n    message: {\n      format: 'bytes'\n    },\n    signature: {\n      format: 'bytes'\n    }\n  }\n};\nexport const feeHistorySchema = {\n  type: 'object',\n  properties: {\n    oldestBlock: {\n      format: 'uint'\n    },\n    baseFeePerGas: {\n      type: 'array',\n      items: {\n        format: 'uint'\n      }\n    },\n    reward: {\n      type: 'array',\n      items: {\n        type: 'array',\n        items: {\n          format: 'uint'\n        }\n      }\n    },\n    gasUsedRatio: {\n      type: 'array',\n      items: {\n        type: 'number'\n      }\n    }\n  }\n};\nexport const storageProofSchema = {\n  type: 'object',\n  properties: {\n    key: {\n      format: 'bytes32'\n    },\n    value: {\n      format: 'uint'\n    },\n    proof: {\n      type: 'array',\n      items: {\n        format: 'bytes32'\n      }\n    }\n  }\n};\nexport const accountSchema = {\n  type: 'object',\n  properties: {\n    balance: {\n      format: 'uint'\n    },\n    codeHash: {\n      format: 'bytes32'\n    },\n    nonce: {\n      format: 'uint'\n    },\n    storageHash: {\n      format: 'bytes32'\n    },\n    accountProof: {\n      type: 'array',\n      items: {\n        format: 'bytes32'\n      }\n    },\n    storageProof: {\n      type: 'array',\n      items: Object.assign({}, storageProofSchema)\n    }\n  }\n};","map":{"version":3,"names":["accessListItemSchema","type","properties","address","format","storageKeys","items","accessListSchema","Object","assign","accessListResultSchema","accessList","gasUsed","chainSchema","enum","hardforkSchema","customChainSchema","name","networkId","chainId","transactionSchema","from","to","oneOf","value","gas","gasPrice","effectiveGasPrice","maxFeePerGas","maxPriorityFeePerGas","data","input","nonce","chain","hardfork","common","customChain","baseChain","gasLimit","v","r","s","transactionInfoSchema","blockHash","blockNumber","hash","transactionIndex","blockSchema","parentHash","sha3Uncles","miner","stateRoot","transactionsRoot","receiptsRoot","logsBloom","difficulty","number","timestamp","extraData","mixHash","totalDifficulty","baseFeePerGas","size","transactions","uncles","blockHeaderSchema","receiptRoot","logSchema","removed","logIndex","transactionHash","topics","syncSchema","startingBlock","currentBlock","highestBlock","knownStates","pulledStates","transactionReceiptSchema","cumulativeGasUsed","contractAddress","logs","root","status","SignatureObjectSchema","messageHash","message","signature","feeHistorySchema","oldestBlock","reward","gasUsedRatio","storageProofSchema","key","proof","accountSchema","balance","codeHash","storageHash","accountProof","storageProof"],"sources":["/Users/branko/Documents/Web3_FE_task/node_modules/web3-eth/src/schemas.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nexport const accessListItemSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\taddress: {\n\t\t\tformat: 'address',\n\t\t},\n\t\tstorageKeys: {\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\tformat: 'bytes32',\n\t\t\t},\n\t\t},\n\t},\n};\n\nexport const accessListSchema = {\n\ttype: 'array',\n\titems: {\n\t\t...accessListItemSchema,\n\t},\n};\n\nexport const accessListResultSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\taccessList: {\n\t\t\t...accessListSchema,\n\t\t},\n\t\tgasUsed: {\n\t\t\ttype: 'string',\n\t\t},\n\t},\n};\n\nexport const chainSchema = {\n\ttype: 'string',\n\tenum: ['goerli', 'kovan', 'mainnet', 'rinkeby', 'ropsten', 'sepolia'],\n};\n\nexport const hardforkSchema = {\n\ttype: 'string',\n\tenum: [\n\t\t'arrowGlacier',\n\t\t'berlin',\n\t\t'byzantium',\n\t\t'chainstart',\n\t\t'constantinople',\n\t\t'dao',\n\t\t'homestead',\n\t\t'istanbul',\n\t\t'london',\n\t\t'merge',\n\t\t'muirGlacier',\n\t\t'petersburg',\n\t\t'shanghai',\n\t\t'spuriousDragon',\n\t\t'tangerineWhistle',\n\t],\n};\n\nexport const customChainSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\tname: {\n\t\t\tformat: 'string',\n\t\t},\n\t\tnetworkId: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tchainId: {\n\t\t\tformat: 'uint',\n\t\t},\n\t},\n};\n\nexport const transactionSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\tfrom: {\n\t\t\tformat: 'address',\n\t\t},\n\t\tto: {\n\t\t\toneOf: [{ format: 'address' }, { type: 'null' }],\n\t\t},\n\t\tvalue: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tgas: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tgasPrice: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\teffectiveGasPrice: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\ttype: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tmaxFeePerGas: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tmaxPriorityFeePerGas: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\taccessList: {\n\t\t\t...accessListSchema,\n\t\t},\n\t\tdata: {\n\t\t\tformat: 'bytes',\n\t\t},\n\t\tinput: {\n\t\t\tformat: 'bytes',\n\t\t},\n\t\tnonce: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tchain: { ...chainSchema },\n\t\thardfork: { ...hardforkSchema },\n\t\tchainId: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tnetworkId: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tcommon: {\n\t\t\ttype: 'object',\n\t\t\tproperties: {\n\t\t\t\tcustomChain: { ...customChainSchema },\n\t\t\t\tbaseChain: {\n\t\t\t\t\t...chainSchema,\n\t\t\t\t},\n\t\t\t\thardfork: {\n\t\t\t\t\t...hardforkSchema,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tgasLimit: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tv: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tr: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\ts: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t},\n};\n\nexport const transactionInfoSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\t...transactionSchema.properties,\n\t\tblockHash: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\tblockNumber: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\thash: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\ttransactionIndex: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tfrom: {\n\t\t\tformat: 'address',\n\t\t},\n\t\tto: {\n\t\t\toneOf: [{ format: 'address' }, { type: 'null' }],\n\t\t},\n\t\tvalue: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tgas: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tgasPrice: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\teffectiveGasPrice: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\ttype: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tmaxFeePerGas: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tmaxPriorityFeePerGas: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\taccessList: {\n\t\t\t...accessListSchema,\n\t\t},\n\t\tdata: {\n\t\t\tformat: 'bytes',\n\t\t},\n\t\tinput: {\n\t\t\tformat: 'bytes',\n\t\t},\n\t\tnonce: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tgasLimit: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tv: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tr: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\ts: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t},\n};\n\nexport const blockSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\tparentHash: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\tsha3Uncles: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\tminer: {\n\t\t\tformat: 'bytes',\n\t\t},\n\t\tstateRoot: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\ttransactionsRoot: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\treceiptsRoot: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\tlogsBloom: {\n\t\t\tformat: 'bytes256',\n\t\t},\n\t\tdifficulty: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tnumber: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tgasLimit: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tgasUsed: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\ttimestamp: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\textraData: {\n\t\t\tformat: 'bytes',\n\t\t},\n\t\tmixHash: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\tnonce: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\ttotalDifficulty: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tbaseFeePerGas: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tsize: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\ttransactions: {\n\t\t\toneOf: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'array',\n\t\t\t\t\titems: {\n\t\t\t\t\t\t...transactionInfoSchema,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'array',\n\t\t\t\t\titems: {\n\t\t\t\t\t\tformat: 'bytes32',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t\tuncles: {\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\tformat: 'bytes32',\n\t\t\t},\n\t\t},\n\t\thash: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t},\n};\n\nexport const blockHeaderSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\tparentHash: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\treceiptRoot: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\tminer: {\n\t\t\tformat: 'bytes',\n\t\t},\n\t\tstateRoot: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\ttransactionsRoot: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\tlogsBloom: {\n\t\t\tformat: 'bytes256',\n\t\t},\n\t\tdifficulty: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tnumber: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tgasLimit: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tgasUsed: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\ttimestamp: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\textraData: {\n\t\t\tformat: 'bytes',\n\t\t},\n\t\tnonce: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tsha3Uncles: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t},\n};\n\nexport const logSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\tremoved: {\n\t\t\tformat: 'bool',\n\t\t},\n\t\tlogIndex: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\ttransactionIndex: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\ttransactionHash: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\tblockHash: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\tblockNumber: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\taddress: {\n\t\t\tformat: 'address',\n\t\t},\n\t\tdata: {\n\t\t\tformat: 'bytes',\n\t\t},\n\t\ttopics: {\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\tformat: 'bytes32',\n\t\t\t},\n\t\t},\n\t},\n};\nexport const syncSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\tstartingBlock: {\n\t\t\tformat: 'string',\n\t\t},\n\t\tcurrentBlock: {\n\t\t\tformat: 'string',\n\t\t},\n\t\thighestBlock: {\n\t\t\tformat: 'string',\n\t\t},\n\t\tknownStates: {\n\t\t\tformat: 'string',\n\t\t},\n\t\tpulledStates: {\n\t\t\tformat: 'string',\n\t\t},\n\t},\n};\n\nexport const transactionReceiptSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\ttransactionHash: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\ttransactionIndex: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tblockHash: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\tblockNumber: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tfrom: {\n\t\t\tformat: 'address',\n\t\t},\n\t\tto: {\n\t\t\tformat: 'address',\n\t\t},\n\t\tcumulativeGasUsed: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tgasUsed: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\teffectiveGasPrice: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tcontractAddress: {\n\t\t\tformat: 'address',\n\t\t},\n\t\tlogs: {\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\t...logSchema,\n\t\t\t},\n\t\t},\n\t\tlogsBloom: {\n\t\t\tformat: 'bytes',\n\t\t},\n\t\troot: {\n\t\t\tformat: 'bytes',\n\t\t},\n\t\tstatus: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\ttype: {\n\t\t\tformat: 'uint',\n\t\t},\n\t},\n};\n\nexport const SignatureObjectSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\tmessageHash: {\n\t\t\tformat: 'bytes',\n\t\t},\n\t\tr: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\ts: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\tv: {\n\t\t\tformat: 'bytes',\n\t\t},\n\t\tmessage: {\n\t\t\tformat: 'bytes',\n\t\t},\n\t\tsignature: {\n\t\t\tformat: 'bytes',\n\t\t},\n\t},\n};\nexport const feeHistorySchema = {\n\ttype: 'object',\n\tproperties: {\n\t\toldestBlock: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tbaseFeePerGas: {\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\tformat: 'uint',\n\t\t\t},\n\t\t},\n\t\treward: {\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\ttype: 'array',\n\t\t\t\titems: {\n\t\t\t\t\tformat: 'uint',\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tgasUsedRatio: {\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\ttype: 'number',\n\t\t\t},\n\t\t},\n\t},\n};\n\nexport const storageProofSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\tkey: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\tvalue: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tproof: {\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\tformat: 'bytes32',\n\t\t\t},\n\t\t},\n\t},\n};\n\nexport const accountSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\tbalance: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tcodeHash: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\tnonce: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tstorageHash: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\taccountProof: {\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\tformat: 'bytes32',\n\t\t\t},\n\t\t},\n\t\tstorageProof: {\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\t...storageProofSchema,\n\t\t\t},\n\t\t},\n\t},\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}