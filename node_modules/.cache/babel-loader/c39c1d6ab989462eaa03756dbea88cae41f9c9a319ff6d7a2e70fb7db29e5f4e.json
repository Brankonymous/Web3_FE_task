{"ast":null,"code":"\"use strict\";\n\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.rpcErrorsMap = exports.LimitExceededError = exports.TransactionRejectedError = exports.VersionNotSupportedError = exports.ResourcesNotFoundError = exports.ResourceUnavailableError = exports.MethodNotSupported = exports.InvalidInputError = exports.InternalError = exports.InvalidParamsError = exports.MethodNotFoundError = exports.InvalidRequestError = exports.ParseError = exports.RpcError = void 0;\nconst web3_error_base_js_1 = require(\"../web3_error_base.js\");\nconst error_codes_js_1 = require(\"../error_codes.js\");\nclass RpcError extends web3_error_base_js_1.BaseWeb3Error {\n  constructor(rpcError, message) {\n    super(message !== null && message !== void 0 ? message : `An Rpc error has occured with a code of ${rpcError.error.code}`);\n    this.code = rpcError.error.code;\n    this.id = rpcError.id;\n    this.jsonrpc = rpcError.jsonrpc;\n    this.jsonRpcError = rpcError.error;\n  }\n  toJSON() {\n    return Object.assign(Object.assign({}, super.toJSON()), {\n      error: this.jsonRpcError,\n      id: this.id,\n      jsonRpc: this.jsonrpc\n    });\n  }\n}\nexports.RpcError = RpcError;\nclass ParseError extends RpcError {\n  constructor(rpcError) {\n    super(rpcError, 'Parse error');\n    this.code = error_codes_js_1.ERR_RPC_INVALID_JSON;\n  }\n}\nexports.ParseError = ParseError;\nclass InvalidRequestError extends RpcError {\n  constructor(rpcError) {\n    super(rpcError, 'Invalid request');\n    this.code = error_codes_js_1.ERR_RPC_INVALID_REQUEST;\n  }\n}\nexports.InvalidRequestError = InvalidRequestError;\nclass MethodNotFoundError extends RpcError {\n  constructor(rpcError) {\n    super(rpcError, 'Method not found');\n    this.code = error_codes_js_1.ERR_RPC_INVALID_METHOD;\n  }\n}\nexports.MethodNotFoundError = MethodNotFoundError;\nclass InvalidParamsError extends RpcError {\n  constructor(rpcError) {\n    super(rpcError, 'Invalid request');\n    this.code = error_codes_js_1.ERR_RPC_INVALID_PARAMS;\n  }\n}\nexports.InvalidParamsError = InvalidParamsError;\nclass InternalError extends RpcError {\n  constructor(rpcError) {\n    super(rpcError, 'Internal error');\n    this.code = error_codes_js_1.ERR_RPC_INTERNAL_ERROR;\n  }\n}\nexports.InternalError = InternalError;\nclass InvalidInputError extends RpcError {\n  constructor(rpcError) {\n    super(rpcError, 'Invalid input');\n    this.code = error_codes_js_1.ERR_RPC_INVALID_INPUT;\n  }\n}\nexports.InvalidInputError = InvalidInputError;\nclass MethodNotSupported extends RpcError {\n  constructor(rpcError) {\n    super(rpcError, 'Method not supported');\n    this.code = error_codes_js_1.ERR_RPC_UNSUPPORTED_METHOD;\n  }\n}\nexports.MethodNotSupported = MethodNotSupported;\nclass ResourceUnavailableError extends RpcError {\n  constructor(rpcError) {\n    super(rpcError, 'Resource unavailable');\n    this.code = error_codes_js_1.ERR_RPC_UNAVAILABLE_RESOURCE;\n  }\n}\nexports.ResourceUnavailableError = ResourceUnavailableError;\nclass ResourcesNotFoundError extends RpcError {\n  constructor(rpcError) {\n    super(rpcError, 'Resource not found');\n    this.code = error_codes_js_1.ERR_RPC_MISSING_RESOURCE;\n  }\n}\nexports.ResourcesNotFoundError = ResourcesNotFoundError;\nclass VersionNotSupportedError extends RpcError {\n  constructor(rpcError) {\n    super(rpcError, 'JSON-RPC version not supported');\n    this.code = error_codes_js_1.ERR_RPC_NOT_SUPPORTED;\n  }\n}\nexports.VersionNotSupportedError = VersionNotSupportedError;\nclass TransactionRejectedError extends RpcError {\n  constructor(rpcError) {\n    super(rpcError, 'Transaction rejected');\n    this.code = error_codes_js_1.ERR_RPC_TRANSACTION_REJECTED;\n  }\n}\nexports.TransactionRejectedError = TransactionRejectedError;\nclass LimitExceededError extends RpcError {\n  constructor(rpcError) {\n    super(rpcError, 'Limit exceeded');\n    this.code = error_codes_js_1.ERR_RPC_LIMIT_EXCEEDED;\n  }\n}\nexports.LimitExceededError = LimitExceededError;\nexports.rpcErrorsMap = new Map();\nexports.rpcErrorsMap.set(error_codes_js_1.ERR_RPC_INVALID_JSON, {\n  error: ParseError\n});\nexports.rpcErrorsMap.set(error_codes_js_1.ERR_RPC_INVALID_REQUEST, {\n  error: InvalidRequestError\n});\nexports.rpcErrorsMap.set(error_codes_js_1.ERR_RPC_INVALID_METHOD, {\n  error: MethodNotFoundError\n});\nexports.rpcErrorsMap.set(error_codes_js_1.ERR_RPC_INVALID_PARAMS, {\n  error: InvalidParamsError\n});\nexports.rpcErrorsMap.set(error_codes_js_1.ERR_RPC_INTERNAL_ERROR, {\n  error: InternalError\n});\nexports.rpcErrorsMap.set(error_codes_js_1.ERR_RPC_INVALID_INPUT, {\n  error: InvalidInputError\n});\nexports.rpcErrorsMap.set(error_codes_js_1.ERR_RPC_UNSUPPORTED_METHOD, {\n  error: MethodNotSupported\n});\nexports.rpcErrorsMap.set(error_codes_js_1.ERR_RPC_UNAVAILABLE_RESOURCE, {\n  error: ResourceUnavailableError\n});\nexports.rpcErrorsMap.set(error_codes_js_1.ERR_RPC_TRANSACTION_REJECTED, {\n  error: TransactionRejectedError\n});\nexports.rpcErrorsMap.set(error_codes_js_1.ERR_RPC_MISSING_RESOURCE, {\n  error: ResourcesNotFoundError\n});\nexports.rpcErrorsMap.set(error_codes_js_1.ERR_RPC_NOT_SUPPORTED, {\n  error: VersionNotSupportedError\n});\nexports.rpcErrorsMap.set(error_codes_js_1.ERR_RPC_LIMIT_EXCEEDED, {\n  error: LimitExceededError\n});","map":{"version":3,"names":["web3_error_base_js_1","require","error_codes_js_1","RpcError","BaseWeb3Error","constructor","rpcError","message","error","code","id","jsonrpc","jsonRpcError","toJSON","Object","assign","jsonRpc","exports","ParseError","ERR_RPC_INVALID_JSON","InvalidRequestError","ERR_RPC_INVALID_REQUEST","MethodNotFoundError","ERR_RPC_INVALID_METHOD","InvalidParamsError","ERR_RPC_INVALID_PARAMS","InternalError","ERR_RPC_INTERNAL_ERROR","InvalidInputError","ERR_RPC_INVALID_INPUT","MethodNotSupported","ERR_RPC_UNSUPPORTED_METHOD","ResourceUnavailableError","ERR_RPC_UNAVAILABLE_RESOURCE","ResourcesNotFoundError","ERR_RPC_MISSING_RESOURCE","VersionNotSupportedError","ERR_RPC_NOT_SUPPORTED","TransactionRejectedError","ERR_RPC_TRANSACTION_REJECTED","LimitExceededError","ERR_RPC_LIMIT_EXCEEDED","rpcErrorsMap","Map","set"],"sources":["/Users/branko/Documents/Web3_FE_task/node_modules/web3-errors/src/errors/rpc_errors.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/* eslint-disable max-classes-per-file */\n\nimport { JsonRpcResponseWithError, JsonRpcId, JsonRpcError } from 'web3-types';\nimport { BaseWeb3Error } from '../web3_error_base.js';\nimport {\n\tERR_RPC_INTERNAL_ERROR,\n\tERR_RPC_INVALID_INPUT,\n\tERR_RPC_INVALID_JSON,\n\tERR_RPC_INVALID_METHOD,\n\tERR_RPC_INVALID_PARAMS,\n\tERR_RPC_INVALID_REQUEST,\n\tERR_RPC_LIMIT_EXCEEDED,\n\tERR_RPC_MISSING_RESOURCE,\n\tERR_RPC_NOT_SUPPORTED,\n\tERR_RPC_TRANSACTION_REJECTED,\n\tERR_RPC_UNAVAILABLE_RESOURCE,\n\tERR_RPC_UNSUPPORTED_METHOD,\n} from '../error_codes.js';\n\nexport class RpcError extends BaseWeb3Error {\n\tpublic code: number;\n\tpublic id: JsonRpcId;\n\tpublic jsonrpc: string;\n\tpublic jsonRpcError: JsonRpcError;\n\tpublic constructor(rpcError: JsonRpcResponseWithError, message?: string) {\n\t\tsuper(message ?? `An Rpc error has occured with a code of ${rpcError.error.code}`);\n\t\tthis.code = rpcError.error.code;\n\t\tthis.id = rpcError.id;\n\t\tthis.jsonrpc = rpcError.jsonrpc;\n\t\tthis.jsonRpcError = rpcError.error;\n\t}\n\n\tpublic toJSON() {\n\t\treturn { ...super.toJSON(), error: this.jsonRpcError, id: this.id, jsonRpc: this.jsonrpc };\n\t}\n}\n\nexport class ParseError extends RpcError {\n\tpublic code = ERR_RPC_INVALID_JSON;\n\tpublic constructor(rpcError: JsonRpcResponseWithError) {\n\t\tsuper(rpcError, 'Parse error');\n\t}\n}\n\nexport class InvalidRequestError extends RpcError {\n\tpublic code = ERR_RPC_INVALID_REQUEST;\n\tpublic constructor(rpcError: JsonRpcResponseWithError) {\n\t\tsuper(rpcError, 'Invalid request');\n\t}\n}\n\nexport class MethodNotFoundError extends RpcError {\n\tpublic code = ERR_RPC_INVALID_METHOD;\n\tpublic constructor(rpcError: JsonRpcResponseWithError) {\n\t\tsuper(rpcError, 'Method not found');\n\t}\n}\n\nexport class InvalidParamsError extends RpcError {\n\tpublic code = ERR_RPC_INVALID_PARAMS;\n\tpublic constructor(rpcError: JsonRpcResponseWithError) {\n\t\tsuper(rpcError, 'Invalid request');\n\t}\n}\n\nexport class InternalError extends RpcError {\n\tpublic code = ERR_RPC_INTERNAL_ERROR;\n\tpublic constructor(rpcError: JsonRpcResponseWithError) {\n\t\tsuper(rpcError, 'Internal error');\n\t}\n}\n\nexport class InvalidInputError extends RpcError {\n\tpublic code = ERR_RPC_INVALID_INPUT;\n\tpublic constructor(rpcError: JsonRpcResponseWithError) {\n\t\tsuper(rpcError, 'Invalid input');\n\t}\n}\n\nexport class MethodNotSupported extends RpcError {\n\tpublic code = ERR_RPC_UNSUPPORTED_METHOD;\n\tpublic constructor(rpcError: JsonRpcResponseWithError) {\n\t\tsuper(rpcError, 'Method not supported');\n\t}\n}\n\nexport class ResourceUnavailableError extends RpcError {\n\tpublic code = ERR_RPC_UNAVAILABLE_RESOURCE;\n\tpublic constructor(rpcError: JsonRpcResponseWithError) {\n\t\tsuper(rpcError, 'Resource unavailable');\n\t}\n}\n\nexport class ResourcesNotFoundError extends RpcError {\n\tpublic code = ERR_RPC_MISSING_RESOURCE;\n\tpublic constructor(rpcError: JsonRpcResponseWithError) {\n\t\tsuper(rpcError, 'Resource not found');\n\t}\n}\n\nexport class VersionNotSupportedError extends RpcError {\n\tpublic code = ERR_RPC_NOT_SUPPORTED;\n\tpublic constructor(rpcError: JsonRpcResponseWithError) {\n\t\tsuper(rpcError, 'JSON-RPC version not supported');\n\t}\n}\n\nexport class TransactionRejectedError extends RpcError {\n\tpublic code = ERR_RPC_TRANSACTION_REJECTED;\n\tpublic constructor(rpcError: JsonRpcResponseWithError) {\n\t\tsuper(rpcError, 'Transaction rejected');\n\t}\n}\n\nexport class LimitExceededError extends RpcError {\n\tpublic code = ERR_RPC_LIMIT_EXCEEDED;\n\tpublic constructor(rpcError: JsonRpcResponseWithError) {\n\t\tsuper(rpcError, 'Limit exceeded');\n\t}\n}\n\nexport const rpcErrorsMap = new Map<number, { error: typeof RpcError }>();\nrpcErrorsMap.set(ERR_RPC_INVALID_JSON, { error: ParseError });\nrpcErrorsMap.set(ERR_RPC_INVALID_REQUEST, {\n\terror: InvalidRequestError,\n});\nrpcErrorsMap.set(ERR_RPC_INVALID_METHOD, {\n\terror: MethodNotFoundError,\n});\nrpcErrorsMap.set(ERR_RPC_INVALID_PARAMS, { error: InvalidParamsError });\nrpcErrorsMap.set(ERR_RPC_INTERNAL_ERROR, { error: InternalError });\nrpcErrorsMap.set(ERR_RPC_INVALID_INPUT, { error: InvalidInputError });\nrpcErrorsMap.set(ERR_RPC_UNSUPPORTED_METHOD, {\n\terror: MethodNotSupported,\n});\nrpcErrorsMap.set(ERR_RPC_UNAVAILABLE_RESOURCE, {\n\terror: ResourceUnavailableError,\n});\nrpcErrorsMap.set(ERR_RPC_TRANSACTION_REJECTED, {\n\terror: TransactionRejectedError,\n});\nrpcErrorsMap.set(ERR_RPC_MISSING_RESOURCE, {\n\terror: ResourcesNotFoundError,\n});\nrpcErrorsMap.set(ERR_RPC_NOT_SUPPORTED, {\n\terror: VersionNotSupportedError,\n});\nrpcErrorsMap.set(ERR_RPC_LIMIT_EXCEEDED, { error: LimitExceededError });\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}